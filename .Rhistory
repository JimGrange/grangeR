group_by(.data$id,
across(all_of(conditions))) |>
summarise(quantiles = list(quantile(.data[[rt_var]],
probs = probs)),
.groups = "drop") |>
unnest_wider(.data$quantiles) |>
rename_with(~ str_remove(.x, "%")) |>
pivot_longer(cols = c(-conditions, -.data$id),
names_to = "quantile",
values_to = rt_var) |>
mutate(quantile = as.numeric(quantile) / 100)
data |>
group_by(.data$id,
across(all_of(conditions))) |>
summarise(quantiles = list(quantile(.data[[rt_var]],
probs = probs)),
.groups = "drop") |>
unnest_wider(.data$quantiles) |>
rename_with(~ str_remove(.x, "%")) |>
pivot_longer(cols = c(-conditions, -.data$id),
names_to = "quantile",
values_to = rt_var) |>
mutate(quantile = as.numeric(quantile) / 100)
# get the CDF values for each individual
id_data <- data |>
group_by(.data$id,
across(all_of(conditions))) |>
summarise(quantiles = list(quantile(.data[[rt_var]],
probs = probs)),
.groups = "drop") |>
unnest_wider(.data$quantiles) |>
rename_with(~ str_remove(.x, "%")) |>
pivot_longer(cols = c(-conditions, -.data$id),
names_to = "quantile",
values_to = rt_var) |>
mutate(quantile = as.numeric(quantile) / 100)
id_data
id_averaged_data <- id_data |>
group_by(across(all_of(conditions)),
.data$quantile) |>
summarise(mean_rt = mean(.data$rt),
se_rt = sd(.data$rt) / sqrt(length(.data$rt)),
.groups = "drop")
id_averaged_data
check()
check()
library(devtools)
use_r("get_caf")
data = grangeR::
devtools::load_all()
data = grangeR::task_switching
head(data)
id_var = "id"
conditions = c("response_set_sequence", "stimulus_set_sequence")
probs = c(.25, .5, .75)
rt_var = "rt"
accuracy_var = "accuracy"
# if id is null (i.e., perhaps it's data from just a single participant or
# a model), add an id column
if(is.null(id_var)){
data <- data |>
mutate(id = 1)
}
head(data)
# if id is not null, add column called id
if(!is.null(id_var)){
if(id_var != "id"){
data$id <- data[[id_var]]
}
}
head(data)
data |>
group_by(.data$id,
across(all_of(conditions)))
data |>
group_by(.data$id,
across(all_of(conditions))) |>
summarise(quantiles = list(quantile(.data[[rt_var]],
probs = probs)),
.groups = "drop")
data |>
group_by(.data$id,
across(all_of(conditions))) |>
summarise(quantiles = list(quantile(.data[[rt_var]],
probs = probs)),
.groups = "drop") |>
unnest_wider(.data$quantiles)
data |>
group_by(.data$id,
across(all_of(conditions))) |>
summarise(quantiles = list(quantile(.data[[rt_var]],
probs = probs))) |>
unnest_wider(.data$quantiles)
?ntile
n_bins = 4
data |>
group_by(.data$id,
across(all_of(conditions))) |>
mutate(rt_quantile = ntile(rt, n_bins))
library(tidyverse)
data |>
group_by(.data$id,
across(all_of(conditions))) |>
mutate(rt_quantile = ntile(rt, n_bins))
data |>
group_by(.data$id,
across(all_of(conditions))) |>
mutate(rt_bin = ntile(rt, n_bins)) |>
group_by(.data$id,
across(all_of(conditions)),
rt_bin)
# get the CAF values for each individual
id_data <- data |>
group_by(.data$id,
across(all_of(conditions))) |>
mutate(rt_bin = ntile(.data$rt, n_bins)) |>
group_by(.data$id,
across(all_of(conditions)),
rt_bin) |>
summarise(
mean_rt = mean(.data$rt),
mean_accuracy = mean(.data$accuracy),
.groups = "drop"
)
id_data
id_data
id_data
id_data |>
rename(mean_rt = .data$rt,
mean_accuracy = .data$accuracy) |>
mutate(se_rt = 0,
se_acc = 0)
id_data
data |>
group_by(.data$id,
across(all_of(conditions))) |>
summarise(quantiles = list(quantile(.data[[rt_var]],
probs = probs)),
.groups = "drop") |>
unnest_wider(.data$quantiles) |>
rename_with(~ str_remove(.x, "%")) |>
pivot_longer(cols = c(-conditions, -.data$id),
names_to = "quantile",
values_to = rt_var) |>
mutate(quantile = as.numeric(quantile) / 100)
id_data |>
rename(mean_rt = .data$mean_rt,
mean_accuracy = .data$mean_accuracy) |>
mutate(se_rt = 0,
se_acc = 0)
id_data |>
group_by(across(all_of(conditions)),
.data$rt_bin) |>
summarise(mean_rt = mean(.data$mean_rt),
se_rt = sd(.data$mean_rtrt) / sqrt(length(.data$mean_rtrt)),
mean_acc = mean(.data$mean_accuracy),
se_acc = sd(.data$mean_accuracy) /
sqrt(length(.data$mean_accuracy)),
.groups = "drop")
id_data |>
group_by(across(all_of(conditions)),
.data$rt_bin) |>
summarise(mean_rt = mean(.data$mean_rt),
se_rt = sd(.data$mean_rt) / sqrt(length(.data$mean_rt)),
mean_acc = mean(.data$mean_accuracy),
se_acc = sd(.data$mean_accuracy) /
sqrt(length(.data$mean_accuracy)),
.groups = "drop")
id_data |>
group_by(across(all_of(conditions)),
.data$rt_bin)
tail(id_data)
id_data |>
group_by(across(all_of(conditions)),
.data$rt_bin) |>
summarise(mean_rt = mean(.data$mean_rt),
se_rt = sd(.data$mean_rt) / sqrt(length(.data$mean_rt)),
mean_acc = mean(.data$mean_accuracy),
)
# get the CAF values for each individual
id_data <- data |>
group_by(.data$id,
across(all_of(conditions))) |>
mutate(rt_bin = ntile(.data$rt, n_bins)) |>
group_by(.data$id,
across(all_of(conditions)),
rt_bin) |>
summarise(
m_rt = mean(.data$rt),
m_accuracy = mean(.data$accuracy),
.groups = "drop"
)
id_data
id_data |>
group_by(across(all_of(conditions)),
.data$rt_bin) |>
summarise(mean_rt = mean(.data$m_rt),
se_rt = sd(.data$m_rt) / sqrt(length(.data$m_rt)),
mean_acc = mean(.data$m_accuracy),
se_acc = sd(.data$m_accuracy) /
sqrt(length(.data$m_accuracy)),
.groups = "drop")
id_averaged_data <- id_data |>
group_by(across(all_of(conditions)),
.data$rt_bin) |>
summarise(mean_rt = mean(.data$m_rt),
se_rt = sd(.data$m_rt) / sqrt(length(.data$m_rt)),
mean_acc = mean(.data$m_accuracy),
se_acc = sd(.data$m_accuracy) /
sqrt(length(.data$m_accuracy)),
.groups = "drop")
id_averaged_data
id_averaged_data
id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_accuracy))
id_averaged_data = data
id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_accuracy))
head(data)
id_averaged_data <- id_data |>
group_by(across(all_of(conditions)),
.data$rt_bin) |>
summarise(mean_rt = mean(.data$m_rt),
se_rt = sd(.data$m_rt) / sqrt(length(.data$m_rt)),
mean_acc = mean(.data$m_accuracy),
se_acc = sd(.data$m_accuracy) /
sqrt(length(.data$m_accuracy)),
.groups = "drop")
data = id_averaged_data
id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_accuracy))
head(data)
id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_acc))
id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_acc)) +
geom_point(size = 3) +
geom_line(linewidth = 1) +
geom_errorbar(aes(xmin = .data$mean_rt - .data$se_rt,
xmax = .data$mean_rt + .data$se_rt,
ymin = .data$mean_acc - .data$se_acc,
ymax = .data$mean_acc + .data$se_acc),
width = 0.02)
id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_acc)) +
geom_point(size = 3) +
geom_line(linewidth = 1) +
geom_errorbar(aes(xmin = .data$mean_rt - .data$se_rt,
xmax = .data$mean_rt + .data$se_rt,
ymin = .data$mean_acc - .data$se_acc,
ymax = .data$mean_acc + .data$se_acc),
width = 2)
id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_acc)) +
geom_point(size = 3) +
geom_line(linewidth = 1) +
geom_errorbar(aes(xmin = .data$mean_rt - .data$se_rt,
xmax = .data$mean_rt + .data$se_rt,
ymin = .data$mean_acc - .data$se_acc,
ymax = .data$mean_acc + .data$se_acc),
width = 200)
head(data)
id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_acc)) +
geom_point(size = 3) +
geom_line(linewidth = 1) +
geom_errorbar(aes(xmin = .data$mean_rt - .data$se_rt,
xmax = .data$mean_rt + .data$se_rt,
ymin = .data$mean_acc - .data$se_acc,
ymax = .data$mean_acc + .data$se_acc),
width = 0.02)
plot <- id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_acc)) +
geom_point(size = 3) +
geom_line(linewidth = 1) +
geom_errorbar(aes(xmin = .data$mean_rt - .data$se_rt,
xmax = .data$mean_rt + .data$se_rt,
ymin = .data$mean_acc - .data$se_acc,
ymax = .data$mean_acc + .data$se_acc),
width = 0.02) +
theme_bw() +
labs(x = "Mean Response Time (ms)",
y = "Proportion Accuracy") +
theme(text = element_text(size = 18)) +
theme(legend.position = "bottom")
plot
id_averaged_data$condition_1 <- as.factor(id_averaged_data[[conditions[1]]])
id_averaged_data$condition_2 <- as.factor(id_averaged_data[[conditions[2]]])
plot <- id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_acc,
group = .data$condition_1)) +
geom_point(size = 3,
aes(colour = .data$condition_1)) +
geom_line(aes(colour = .data$condition_1),
linewidth = 1) +
geom_errorbar(aes(colour = .data$condition_1,
xmin = .data$mean_rt - .data$se_rt,
xmax = .data$mean_rt + .data$se_rt,
ymin = .data$mean_acc - .data$se_acc,
ymax = .data$mean_acc + .data$se_acc),
width = 0.02) +
theme_bw() +
facet_grid(.~.data$condition_2) +
scale_colour_discrete(name = conditions) +
labs(x = "Mean Response Time (ms)",
y = "Proportion Accuracy") +
theme(text = element_text(size = 18)) +
theme(legend.position = "bottom")
plot
plot <- id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_acc,
group = .data$condition_1)) +
geom_point(size = 3,
aes(colour = .data$condition_1)) +
geom_line(aes(colour = .data$condition_1),
linewidth = 1) +
geom_errorbar(aes(colour = .data$condition_1,
xmin = .data$mean_rt - .data$se_rt,
xmax = .data$mean_rt + .data$se_rt,
ymin = .data$mean_acc - .data$se_acc,
ymax = .data$mean_acc + .data$se_acc),
width = 500) +
theme_bw() +
facet_grid(.~.data$condition_2) +
scale_colour_discrete(name = conditions) +
labs(x = "Mean Response Time (ms)",
y = "Proportion Accuracy") +
theme(text = element_text(size = 18)) +
theme(legend.position = "bottom")
plot
plot <- id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_acc,
group = .data$condition_1)) +
geom_point(size = 3,
aes(colour = .data$condition_1)) +
geom_line(aes(colour = .data$condition_1),
linewidth = 1) +
geom_errorbar(aes(colour = .data$condition_1,
ymin = .data$mean_acc - .data$se_acc,
ymax = .data$mean_acc + .data$se_acc),
width = 500) +
geom_errorbarh(aes(colour = .data$condition_1,
xmin = .data$mean_rt - .data$se_rt,
xmax = .data$mean_rt + .data$se_rt),
width = 200) +
theme_bw() +
facet_grid(.~.data$condition_2) +
scale_colour_discrete(name = conditions) +
labs(x = "Mean Response Time (ms)",
y = "Proportion Accuracy") +
theme(text = element_text(size = 18)) +
theme(legend.position = "bottom")
?geom_errorbarh
plot <- id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_acc,
group = .data$condition)) +
geom_point(size = 3,
aes(colour = .data$condition)) +
geom_line(aes(colour = .data$condition),
linewidth = 1) +
geom_errorbar(aes(colour = .data$condition,
ymin = .data$mean_acc - .data$se_acc,
ymax = .data$mean_acc + .data$se_acc),
width = 0.02) +
geom_errorbarh(aes(colour = .data$condition,
xmin = .data$mean_rt - .data$se_rt,
xmax = .data$mean_rt + .data$se_rt),
height = 200) +
theme_bw() +
scale_colour_discrete(name = conditions) +
labs(x = "Mean Response Time (ms)",
y = "Proportion Accuracy") +
theme(text = element_text(size = 18)) +
theme(legend.position = "bottom")
plot
plot <- id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_acc,
group = .data$condition_1)) +
geom_point(size = 3,
aes(colour = .data$condition_1)) +
geom_line(aes(colour = .data$condition_1),
linewidth = 1) +
geom_errorbar(aes(colour = .data$condition_1,
ymin = .data$mean_acc - .data$se_acc,
ymax = .data$mean_acc + .data$se_acc),
width = 500) +
geom_errorbarh(aes(colour = .data$condition_1,
xmin = .data$mean_rt - .data$se_rt,
xmax = .data$mean_rt + .data$se_rt),
height = 200) +
theme_bw() +
facet_grid(.~.data$condition_2) +
scale_colour_discrete(name = conditions) +
labs(x = "Mean Response Time (ms)",
y = "Proportion Accuracy") +
theme(text = element_text(size = 18)) +
theme(legend.position = "bottom")
plot
plot <- id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_acc,
group = .data$condition_1)) +
geom_point(size = 3,
aes(colour = .data$condition_1)) +
geom_line(aes(colour = .data$condition_1),
linewidth = 1) +
geom_errorbar(aes(colour = .data$condition_1,
ymin = .data$mean_acc - .data$se_acc,
ymax = .data$mean_acc + .data$se_acc),
width = 0.02) +
geom_errorbarh(aes(colour = .data$condition_1,
xmin = .data$mean_rt - .data$se_rt,
xmax = .data$mean_rt + .data$se_rt),
height = 0.02) +
theme_bw() +
facet_grid(.~.data$condition_2) +
scale_colour_discrete(name = conditions) +
labs(x = "Mean Response Time (ms)",
y = "Proportion Accuracy") +
theme(text = element_text(size = 18)) +
theme(legend.position = "bottom")
plot
plot <- id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_acc,
group = .data$condition_1)) +
geom_point(size = 3,
aes(colour = .data$condition_1)) +
geom_line(aes(colour = .data$condition_1),
linewidth = 1) +
geom_errorbar(aes(colour = .data$condition_1,
ymin = .data$mean_acc - .data$se_acc,
ymax = .data$mean_acc + .data$se_acc),
width = 0.02) +
geom_errorbarh(aes(colour = .data$condition_1,
xmin = .data$mean_rt - .data$se_rt,
xmax = .data$mean_rt + .data$se_rt),
height = 0.02) +
theme_bw() +
facet_grid(.~.data$condition_2) +
scale_colour_discrete(name = conditions) +
labs(x = "Mean Response Time (ms)",
y = "Proportion Accuracy") +
theme(text = element_text(size = 18)) +
theme(legend.position = "bottom")
plot
plot <- id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_acc,
group = .data$condition_1)) +
geom_point(size = 3,
aes(colour = .data$condition_1)) +
geom_line(aes(colour = .data$condition_1),
linewidth = 1) +
geom_errorbar(aes(colour = .data$condition_1,
ymin = .data$mean_acc - .data$se_acc,
ymax = .data$mean_acc + .data$se_acc),
width = 0.02) +
geom_errorbarh(aes(colour = .data$condition_1,
xmin = .data$mean_rt - .data$se_rt,
xmax = .data$mean_rt + .data$se_rt),
height = 0.00000002) +
theme_bw() +
facet_grid(.~.data$condition_2) +
scale_colour_discrete(name = conditions) +
labs(x = "Mean Response Time (ms)",
y = "Proportion Accuracy") +
theme(text = element_text(size = 18)) +
theme(legend.position = "bottom")
plot
id_averaged_data$condition_1 <- as.factor(id_averaged_data[[conditions[1]]])
id_averaged_data$condition_2 <- as.factor(id_averaged_data[[conditions[2]]])
plot <- id_averaged_data |>
ggplot(aes(x = .data$mean_rt,
y = .data$mean_acc,
group = .data$condition_1)) +
geom_point(size = 3,
aes(colour = .data$condition_1)) +
geom_line(aes(colour = .data$condition_1),
linewidth = 1) +
geom_errorbar(aes(colour = .data$condition_1,
ymin = .data$mean_acc - .data$se_acc,
ymax = .data$mean_acc + .data$se_acc),
width = 0.0) +
geom_errorbarh(aes(colour = .data$condition_1,
xmin = .data$mean_rt - .data$se_rt,
xmax = .data$mean_rt + .data$se_rt),
height = 0.0) +
theme_bw() +
facet_grid(.~.data$condition_2) +
scale_colour_discrete(name = conditions) +
labs(x = "Mean Response Time (ms)",
y = "Proportion Accuracy") +
theme(text = element_text(size = 18)) +
theme(legend.position = "bottom")
plot
load_all()
head(data)
